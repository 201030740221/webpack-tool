// Generated by CoffeeScript 1.9.3
(function() {
  var cwd, del, devConfig, gulp, gutil, path, pkg, prebuiltConfig, sequence, useWebpack, webpack, webpackTool;

  path = require('path');

  webpackTool = require('../index');

  gulp = require('gulp');

  gutil = require('gulp-util');

  sequence = require('gulp-sequence');

  del = require('del');

  devConfig = require('./configs/dev.config');

  prebuiltConfig = require('./configs/prebuilt.config');

  cwd = process.cwd();

  pkg = require(path.join(cwd, 'package.json'));

  webpack = require("webpack");

  useWebpack = function(conf, callback) {
    return webpackTool.compiler(conf).run(function(err, stats) {
      if (err) {
        throw new gutil.PluginError('[webpack]', err);
      }
      return callback();
    });
  };

  gulp.task("clean", function() {
    return del(path.join(cwd, '/dist'));
  });

  gulp.task("component", ['clean'], function() {
    return webpackTool.server(devConfig, "component-mode");
  });

  gulp.task("webpack:js", function(callback) {
    webpackTool.compiler(devConfig).run(function(err, stats) {
      if (err) {
        throw new gutil.PluginError('[webpack]', err);
      }
      gutil.log('[webpack:build]', stats.toString({
        colors: true
      }));
      return callback();
    });
  });

  gulp.task('test', function(callback) {
    return webpackTool.karma(callback).start();
  });

  gulp.task('common:js', function(callback) {
    return webpack({
      entry: {
        vendor: path.join(cwd, '/src/js/common/index.js')
      },
      output: {
        path: path.join(cwd, devConfig.webpack.base.output + '/js'),
        publicPath: "/",
        filename: "[name].js"
      },
      module: {
        loaders: [
          {
            test: /\.(js|.jsx)$/,
            loader: "babel-loader"
          }, {
            test: /\.css$/,
            loaders: ["style-loader", "css-loader"]
          }
        ]
      }
    }, function(err, stats) {
      if (err) {
        throw new gutil.PluginError("webpack", err);
      }
      gutil.log("[common:js]", stats.toString());
      return callback();
    });
  });

  gulp.task('preCompile', ['webpack:js']);

  gulp.task('postCompile', function() {});

  gulp.task('afterCompile', function() {});

  gulp.task('release', function() {
    return gulp.start('preCompile', 'postCompile', 'afterCompile');
  });

  gulp.task("server", ['clean', 'common:js', 'release'], function() {
    var commonDir;
    webpackTool.BsServer(devConfig);
    commonDir = path.join(cwd, '/src/js/common/**');
    gulp.watch(commonDir, ['common:js']);
    return gulp.watch([path.join(cwd, '/src/**/*'), '!' + commonDir], ['webpack:js']);
  });

  gulp.task("build", ['clean', 'common:js', 'release'], function() {
    return gutil.log("[build complete]");
  });

  module.exports = gulp;

}).call(this);
